name: Run Tests

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup caching for node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test:remote
        id: tests
        continue-on-error: true

      - name: Set result
        id: result
        run: |
          if [[ "${{ steps.tests.outcome }}" == "success" ]]; then
            echo "grade=A" >> $GITHUB_ENV
            echo "state=passed" >> $GITHUB_ENV
          else
            echo "grade=F" >> $GITHUB_ENV
            echo "state=failed" >> $GITHUB_ENV
          fi
      - name: Comment PR with feedback
        if: always() # this ensures the step runs even if previous steps fail
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const output = `Your tests ${context.payload.check_suite.conclusion === 'success' ? 'passed! ðŸŽ‰' : 'failed ðŸ¥º'}.\n\nYour grade: ${context.payload.check_suite.conclusion === 'success' ? 'A' : 'F'}.`
            github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
            });
